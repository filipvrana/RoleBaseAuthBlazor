@page "/treninky"

<PageTitle>Tréninky</PageTitle>

@using RoleBaseAuthBlazor.Data

@inject RoleBaseAuthBlazor.Services.IPracticeService practiceService


<h1>Tréninky</h1>

<MudCard Elevation="25">
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h6">Add / Edit Practices</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent>
        <MudDatePicker Label="Start Date" @bind-Date="practice.Date" />
        <MudTextField @bind-Value="practice.Length" Label="Length(min)" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
        <MudTextField @bind-Value="practice.Location" Label="Location" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
        <br />
        <MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="Save">Save Practice</MudButton>
    </MudCardContent>
</MudCard>
<br />
<MudTable Elevation="25" Items="GetPractices()" Filter="new Func<Practice, bool>(Search)" @bind-customer="practice">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Practices</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="searchString" Placeholder="Search for Practices..." Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>ID</MudTh>
        <MudTh>Date</MudTh>
        <MudTh>Length(min)</MudTh>
        <MudTh>Location</MudTh>
        <MudTh>Actions</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.Id</MudTd>
        <MudTd DataLabel="Date">@context.Date</MudTd>
        <MudTd DataLabel="Length(min)">@context.Length</MudTd>
        <MudTd DataLabel="Location">@context.Location</MudTd>
        <MudTd DataLabel="">
            <MudFab @onclick="@(()=>Edit(@context.Id))" Color="Color.Primary" Icon="@Icons.Material.Filled.Edit" Size="Size.Small" IconSize="Size.Small" />
            <MudFab @onclick="@(()=>Delete(@context.Id))" Color="Color.Secondary" Icon="@Icons.Material.Filled.Delete" Size="Size.Small" IconSize="Size.Small" />
        </MudTd>
    </RowTemplate>
</MudTable>

@code{
    private string searchString = "";
    private Practice practice = new Practice();
    private List<Practice> practices = new List<Practice>();
    protected override async Task OnInitializedAsync()
    {
        GetPractices();
    }
    private List<Practice> GetPractices()
    {
        practices = practiceService.GetPractices();
        return practices;
    }
    private bool Search(Practice practice)
    {
        if (string.IsNullOrWhiteSpace(searchString)) return true;
        if (practice.Date.ToString().Contains(searchString, StringComparison.OrdinalIgnoreCase)
            || practice.Length.ToString().Contains(searchString, StringComparison.OrdinalIgnoreCase)
            || practice.Location.Contains(searchString, StringComparison.OrdinalIgnoreCase))
        {
            return true;
        }
        return false;
    }
    private void Save()
    {
        practiceService.SavePractice(practice);
        practice = new Practice();
        
        GetPractices();
    }
    private void Edit(int id)
    {
        practice = practices.FirstOrDefault(c => c.Id == id);
    }
    private void Delete(int id)
    {
        practiceService.DeletePractice(id);
        
        GetPractices();
    }
}



