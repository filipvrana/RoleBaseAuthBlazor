@page "/"


<PageTitle>Přerov Mammoths</PageTitle>
<h1>Přerov Mammoths</h1>

@using Microsoft.AspNetCore.Mvc.Rendering
@using RoleBaseAuthBlazor.Data
@using RoleBaseAuthBlazor.GameServices

@inject RoleBaseAuthBlazor.GameServices.IGameService gameService


<h1>Zápasy</h1>

<AuthorizeView Context="Auth" Roles="Admin, Manager, Coach">
    <MudCard Elevation="25">
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h6">Add / Edit Games</MudText>
            </CardHeaderContent>
        </MudCardHeader>
        <MudCardContent>
            <MudDatePicker Label="Date" @bind-Date="game.Date" />
            <MudTextField @bind-Value="game.Score" Label="Score" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
            <MudTextField @bind-Value="game.Result" Label="Result" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>

            <MudTextField @bind-Value="game.Rival" Label="Rival" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
            <br />
            <MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="Save">Save Game</MudButton>
        </MudCardContent>
    </MudCard>
</AuthorizeView>
<br />
<MudTable Elevation="25" Items="GetGames()" Filter="new Func<Game, bool>(Search)" @bind-customer="game">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Games</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="searchString" Placeholder="Search for Games..." Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>ID</MudTh>
        <MudTh>Date</MudTh>
        <MudTh>Score</MudTh>
        <MudTh>Result</MudTh>

        <MudTh>Rival</MudTh>
        <AuthorizeView Context="Auth" Roles="Admin, Manager, Coach">
            <MudTh>Actions</MudTh>
        </AuthorizeView>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.Id</MudTd>
        <MudTd DataLabel="Date">@context.Date</MudTd>
        <MudTd DataLabel="Score">@context.Score</MudTd>
        <MudTd DataLabel="Win/Loss">@context.Result</MudTd>

        <MudTd DataLabel="Rival">@context.Rival</MudTd>
        <AuthorizeView Context="Auth" Roles="Admin, Manager, Coach">
            <MudTd DataLabel="">
                <MudFab @onclick="@(()=>Edit(@context.Id))" Color="Color.Primary" Icon="@Icons.Material.Filled.Edit" Size="Size.Small" IconSize="Size.Small" />
                <MudFab @onclick="@(()=>Delete(@context.Id))" Color="Color.Secondary" Icon="@Icons.Material.Filled.Delete" Size="Size.Small" IconSize="Size.Small" />
            </MudTd>
        </AuthorizeView>

    </RowTemplate>
</MudTable>



@code {
    private string searchString = "";
    private Game game = new Game();
    private List<Game> games = new List<Game>();
    protected override async Task OnInitializedAsync()
    {
        GetGames();
    }
    private List<Game> GetGames()
    {
        games = gameService.GetGames();
        return games;
    }
    private bool Search(Game game)
    {
        if (string.IsNullOrWhiteSpace(searchString)) return true;
        if (game.Date.ToString().Contains(searchString, StringComparison.OrdinalIgnoreCase)
        || game.Score.ToString().Contains(searchString, StringComparison.OrdinalIgnoreCase)
            || game.Rival.Contains(searchString, StringComparison.OrdinalIgnoreCase)
                || game.Result.Contains(searchString, StringComparison.OrdinalIgnoreCase))
        {
            return true;
        }
        return false;
    }
    private void Save()
    {
        gameService.SaveGame(game);
        game = new Game();

        GetGames();
    }
    private void Edit(int id)
    {
        game = games.FirstOrDefault(c => c.Id == id);
    }
    private void Delete(int id)
    {
        gameService.DeleteGame(id)
;

        GetGames();
    }
}   